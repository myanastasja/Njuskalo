sliderInput("pricerange", "Median price", min(df$price_EUR), max(df$price_EUR), value=df$price_EUR[df$year == input$inputyear,]),
tableOutput("table")
)
library(shiny)
library(ggplot2)
carmodel <- c("Škoda Octavia")
caryear <- unique(df$year)
ui <- fluidPage(
selectInput("carmodel", "Model", choices = carmodel),
textInput("inputyear", "Year", placeholder = "2017"),
sliderInput("pricerange", "Median price", min(df$price_EUR), max(df$price_EUR), value=df[df$year == input$inputyear,]price_EUR),
library(shiny)
library(ggplot2)
carmodel <- c("Škoda Octavia")
caryear <- unique(df$year)
ui <- fluidPage(
selectInput("carmodel", "Model", choices = carmodel),
textInput("inputyear", "Year", placeholder = "2017"),
sliderInput("pricerange", "Median price", min(df$price_EUR), max(df$price_EUR), value=df[df$year == input$inputyear,]$price_EUR),
tableOutput("table")
)
library(shiny)
library(ggplot2)
carmodel <- c("Škoda Octavia")
caryear <- unique(df$year)
ui <- fluidPage(
selectInput("carmodel", "Model", choices = carmodel),
textInput("inputyear", "Year", placeholder = "2017"),
sliderInput("pricerange", "Median price", min(df$price_EUR), max(df$price_EUR), value=c()),
tableOutput("table")
)
library(shiny)
library(ggplot2)
carmodel <- c("Škoda Octavia")
caryear <- unique(df$year)
ui <- fluidPage(
selectInput("carmodel", "Model", choices = carmodel),
textInput("inputyear", "Year", placeholder = "2017"),
sliderInput("pricerange", "Median price", min(df$price_EUR), max(df$price_EUR), value=df$price_EUR[df$year == input$inputyear,]))),
library(shiny)
library(ggplot2)
carmodel <- c("Škoda Octavia")
caryear <- unique(df$year)
ui <- fluidPage(
selectInput("carmodel", "Model", choices = carmodel),
textInput("inputyear", "Year", placeholder = "2017"),
sliderInput("pricerange", "Median price", min(df$price_EUR), max(df$price_EUR), value=df$price_EUR[df$year == input$inputyear,])),
library(shiny)
library(ggplot2)
carmodel <- c("Škoda Octavia")
caryear <- unique(df$year)
ui <- fluidPage(
selectInput("carmodel", "Model", choices = carmodel),
textInput("inputyear", "Year", placeholder = "2017"),
sliderInput("pricerange", "Median price", min(df$price_EUR), max(df$price_EUR), value=df$price_EUR[df$year == input$inputyear,]),
tableOutput("table")
)
library(shiny)
library(ggplot2)
carmodel <- c("Škoda Octavia")
caryear <- unique(df$year)
ui <- fluidPage(
selectInput("carmodel", "Model", choices = carmodel),
textInput("inputyear", "Year", placeholder = "2017"),
# sliderInput("pricerange", "Median price", min(df$price_EUR), max(df$price_EUR), value=df$price_EUR[df$year == input$inputyear,]),
tableOutput("table")
)
server <- function(input, output, session) {
output$table <- renderTable({
df[df$year == input$inputyear,]
})
}
shinyApp(ui, server)
ui <- fluidPage(
textInput("name", "What's your name?"),
textOutput("greeting")
)
server <- function(input, output, session) {
output$greeting <- renderText({
paste0("Hello ", input$name)
})
}
shinyApp(ui, server)
ui <- fluidPage(
sliderInput("x", label = "If x is", min = 1, max = 50, value = 30),
sliderInput("y", label = "and y is", min = 1, max = 50, value = 5),
"then x times y is",
textOutput("product")
)
server <- function(input, output, session) {
output$product <- renderText({
input$x * input$y
})
}
shinyApp(ui, server)
ui <- fluidPage(
sliderInput("x", "If x is", min = 1, max = 50, value = 30),
sliderInput("y", "and y is", min = 1, max = 50, value = 5),
"then, (x * y) is", textOutput("product"),
"and, (x * y) + 5 is", textOutput("product_plus5"),
"and (x * y) + 10 is", textOutput("product_plus10")
)
server <- function(input, output, session) {
product <- reactive(input$x * input$y)
output$product <- renderText({
product()
})
output$product_plus5 <- renderText({
product() + 5
})
output$product_plus10 <- renderText({
product() + 10
})
}
shinyApp(ui, server)
library(ggplot2)
datasets <- c("economics", "faithfuld", "seals")
ui <- fluidPage(
selectInput("dataset", "Dataset", choices = datasets),
verbatimTextOutput("summary"),
plotOutput("plot")
)
server <- function(input, output, session) {
dataset <- reactive({
get(input$dataset, "package:ggplot2")
})
output$summary <- renderPrint({
summary(dataset())
})
output$plot <- renderPlot({
plot(dataset())
}, res = 96)
}
shinyApp(ui, server)
library(shiny)
library(ggplot2)
carmodel <- c("Škoda Octavia")
caryear <- unique(df$year)
ui <- fluidPage(
selectInput("carmodel", "Model", choices = carmodel),
textInput("inputyear", "Year", placeholder = "2017"),
# sliderInput("pricerange", "Median price", min(df$price_EUR), max(df$price_EUR), value=df$price_EUR[df$year == input$inputyear,]),
tableOutput("table")
)
server <- function(input, output, session) {
output$table <- renderTable({
df[df$year == input$inputyear,]
})
}
shinyApp(ui, server)
library(shiny)
library(ggplot2)
carmodel <- c("Škoda Octavia")
caryear <- unique(df$year)
ui <- fluidPage(
selectInput("carmodel", "Model", choices = carmodel),
textInput("inputyear", "Year", placeholder = ""),
# sliderInput("pricerange", "Median price", min(df$price_EUR), max(df$price_EUR), value=df$price_EUR[df$year == input$inputyear,]),
tableOutput("table")
)
server <- function(input, output, session) {
output$table <- renderTable({
df[df$year == input$inputyear,]
})
}
shinyApp(ui, server)
library(shiny)
library(ggplot2)
carmodel <- c("Škoda Octavia")
caryear <- unique(df$year)
ui <- fluidPage(
selectInput("carmodel", "Model", choices = carmodel),
textInput("inputyear", "Year", placeholder = distinct(df$year)),
# sliderInput("pricerange", "Median price", min(df$price_EUR), max(df$price_EUR), value=df$price_EUR[df$year == input$inputyear,]),
tableOutput("table")
)
distinct(df$year)
unique(df$year)
library(shiny)
library(ggplot2)
carmodel <- c("Škoda Octavia")
caryear <- unique(df$year)
ui <- fluidPage(
selectInput("carmodel", "Model", choices = carmodel),
textInput("inputyear", "Year", placeholder = unique(df$year)),
# sliderInput("pricerange", "Median price", min(df$price_EUR), max(df$price_EUR), value=df$price_EUR[df$year == input$inputyear,]),
tableOutput("table")
)
server <- function(input, output, session) {
output$table <- renderTable({
df[df$year in input$inputyear,]
library(shiny)
library(ggplot2)
carmodel <- c("Škoda Octavia")
caryear <- unique(df$year)
ui <- fluidPage(
selectInput("carmodel", "Model", choices = carmodel),
textInput("inputyear", "Year", placeholder = unique(df$year)),
# sliderInput("pricerange", "Median price", min(df$price_EUR), max(df$price_EUR), value=df$price_EUR[df$year == input$inputyear,]),
tableOutput("table")
)
server <- function(input, output, session) {
output$table <- renderTable({
df %>% filter(df$year, input$inputyear)
# [df$year in input$inputyear,]
})
}
shinyApp(ui, server)
library(shiny)
library(ggplot2)
library(dplyr)
carmodel <- c("Škoda Octavia")
caryear <- unique(df$year)
ui <- fluidPage(
selectInput("carmodel", "Model", choices = carmodel),
textInput("inputyear", "Year", placeholder = unique(df$year)),
# sliderInput("pricerange", "Median price", min(df$price_EUR), max(df$price_EUR), value=df$price_EUR[df$year == input$inputyear,]),
tableOutput("table")
)
server <- function(input, output, session) {
output$table <- renderTable({
df %>% filter(year %in% input$inputyear)
# [df$year in input$inputyear,]
})
}
shinyApp(ui, server)
filter(df, year %in% input$inputyear)
filter(df, year %in% ("2007", "2008"))
filter(df, year %in% c("2007", "2008"))
unique(df$year)
filter(df, year %in% unique(df$year))
library(shiny)
library(ggplot2)
library(dplyr)
carmodel <- c("Škoda Octavia")
caryear <- unique(df$year)
ui <- fluidPage(
selectInput("carmodel", "Model", choices = carmodel),
textInput("inputyear", "Year", placeholder = unique(df$year)),
# sliderInput("pricerange", "Median price", min(df$price_EUR), max(df$price_EUR), value=df$price_EUR[df$year == input$inputyear,]),
tableOutput("table")
)
server <- function(input, output, session) {
output$table <- renderTable({
dfresult %>% filter(df, year %in% input$inputyear)
# [df$year in input$inputyear,]
})
}
shinyApp(ui, server)
library(shiny)
library(ggplot2)
library(dplyr)
carmodel <- c("Škoda Octavia")
caryear <- unique(df$year)
ui <- fluidPage(
selectInput("carmodel", "Model", choices = carmodel),
textInput("inputyear", "Year", placeholder = unique(df$year)),
# sliderInput("pricerange", "Median price", min(df$price_EUR), max(df$price_EUR), value=df$price_EUR[df$year == input$inputyear,]),
tableOutput("table")
)
server <- function(input, output, session) {
output$table <- renderTable({
dfresult <- filter(df, year %in% input$inputyear)
# [df$year in input$inputyear,]
})
}
shinyApp(ui, server)
library(shiny)
library(ggplot2)
library(dplyr)
carmodel <- c("Škoda Octavia")
caryear <- unique(df$year)
ui <- fluidPage(
selectInput("carmodel", "Model", choices = carmodel),
textInput("inputyear", "Year", value = unique(df$year), placeholder = "e.g. 2007, 2008"),
# sliderInput("pricerange", "Median price", min(df$price_EUR), max(df$price_EUR), value=df$price_EUR[df$year == input$inputyear,]),
tableOutput("table")
)
server <- function(input, output, session) {
output$table <- renderTable({
dfresult <- filter(df, year %in% input$inputyear)
# [df$year in input$inputyear,]
})
}
shinyApp(ui, server)
filter(df, year %in% unique(df$year))
library(shiny)
library(ggplot2)
library(dplyr)
carmodel <- c("Škoda Octavia")
caryear <- unique(df$year)
ui <- fluidPage(
selectInput("carmodel", "Model", choices = carmodel),
textInput("inputyear", "Year", value = unique(df$year), placeholder = "e.g. 2007, 2008"),
# sliderInput("pricerange", "Median price", min(df$price_EUR), max(df$price_EUR), value=df$price_EUR[df$year == input$inputyear,]),
tableOutput("table")
)
server <- function(input, output, session) {
dfresult <- filter(df, year %in% input$inputyear)
output$table <- renderTable({
dfresult
})
}
shinyApp(ui, server)
library(shiny)
library(ggplot2)
library(dplyr)
carmodel <- c("Škoda Octavia")
caryear <- unique(df$year)
ui <- fluidPage(
selectInput("carmodel", "Model", choices = carmodel),
textInput("inputyear", "Year", value = unique(df$year), placeholder = "e.g. 2007, 2008"),
# sliderInput("pricerange", "Median price", min(df$price_EUR), max(df$price_EUR), value=df$price_EUR[df$year == input$inputyear,]),
tableOutput("table")
)
server <- function(input, output, session) {
dfresult <- filter(df, year %in% input$inputyear)
output$table <- renderTable({
dfresult
})
}
shinyApp(ui, server)
library(shiny)
library(ggplot2)
library(dplyr)
carmodel <- c("Škoda Octavia")
caryear <- unique(df$year)
ui <- fluidPage(
selectInput("carmodel", "Model", choices = carmodel),
textInput("inputyear", "Year", value = unique(df$year), placeholder = "e.g. 2007, 2008"),
# sliderInput("pricerange", "Median price", min(df$price_EUR), max(df$price_EUR), value=df$price_EUR[df$year == input$inputyear,]),
tableOutput("table")
)
server <- function(input, output, session) {
dfresult <- reactive(filter(df, year %in% input$inputyear))
output$table <- renderTable({
dfresult
})
}
shinyApp(ui, server)
filter(df, year %in% unique(df$year))
library(shiny)
library(ggplot2)
library(dplyr)
carmodel <- c("Škoda Octavia")
caryear <- unique(df$year)
ui <- fluidPage(
selectInput("carmodel", "Model", choices = carmodel),
textInput("inputyear", "Year", value = unique(df$year), placeholder = "e.g. 2007, 2008"),
# sliderInput("pricerange", "Median price", min(df$price_EUR), max(df$price_EUR), value=df$price_EUR[df$year == input$inputyear,]),
tableOutput("table")
)
server <- function(input, output, session) {
# dfresult <- reactive(filter(df, year %in% input$inputyear))
output$table <- renderTable({
filter(df, year %in% input$inputyear)
})
}
shinyApp(ui, server)
unique(df$year)
arrange(unique(df$year))
order(unique(df$year))
ordered(unique(df$year))
unique(df$year) %>% order()
df$year
unique(df$year)
unique(df$year) %>% order(.)
unique(df$year) %>% arrange(.)
unique(df$year) %>% sort()
library(shiny)
library(ggplot2)
library(dplyr)
carmodel <- c("Škoda Octavia")
caryear <- unique(df$year)
ui <- fluidPage(
selectInput("carmodel", "Model", choices = carmodel),
textInput("inputyear", "Year", value = unique(df$year) %>% sort(), placeholder = "e.g. 2007, 2008"),
# sliderInput("pricerange", "Median price", min(df$price_EUR), max(df$price_EUR), value=df$price_EUR[df$year == input$inputyear,]),
tableOutput("table")
)
server <- function(input, output, session) {
# dfresult <- reactive(filter(df, year %in% input$inputyear))
output$table <- renderTable({
filter(df, year %in% input$inputyear)
})
}
shinyApp(ui, server)
library(shiny)
library(ggplot2)
library(dplyr)
carmodel <- c("Škoda Octavia")
caryear <- unique(df$year)
ui <- fluidPage(
selectInput("carmodel", "Model", choices = carmodel),
textInput("inputyear", "Year",  placeholder = "e.g. 2007, 2008"),
# sliderInput("pricerange", "Median price", min(df$price_EUR), max(df$price_EUR), value=df$price_EUR[df$year == input$inputyear,]),
tableOutput("table")
)
server <- function(input, output, session) {
output$table <- renderTable({
df[year %in% input$inputyear,]
})
}
shinyApp(ui, server)
library(shiny)
library(ggplot2)
library(dplyr)
carmodel <- c("Škoda Octavia")
caryear <- unique(df$year)
ui <- fluidPage(
selectInput("carmodel", "Model", choices = carmodel),
textInput("inputyear", "Year",  placeholder = "e.g. 2007, 2008"),
# sliderInput("pricerange", "Median price", min(df$price_EUR), max(df$price_EUR), value=df$price_EUR[df$year == input$inputyear,]),
tableOutput("table")
)
server <- function(input, output, session) {
output$table <- renderTable({
df[year %in% input$inputyear,]
})
}
shinyApp(ui, server)
library(shiny)
library(ggplot2)
library(dplyr)
carmodel <- c("Škoda Octavia")
caryear <- unique(df$year)
ui <- fluidPage(
selectInput("carmodel", "Model", choices = carmodel),
textInput("inputyear", "Year",  placeholder = "e.g. 2007, 2008"),
# sliderInput("pricerange", "Median price", min(df$price_EUR), max(df$price_EUR), value=df$price_EUR[df$year == input$inputyear,]),
tableOutput("table")
)
server <- function(input, output, session) {
output$table <- renderTable({
df[year==input$inputyear,]
})
}
shinyApp(ui, server)
library(shiny)
library(ggplot2)
library(dplyr)
carmodel <- c("Škoda Octavia")
caryear <- unique(df$year)
ui <- fluidPage(
selectInput("carmodel", "Model", choices = carmodel),
textInput("inputyear", "Year",  placeholder = "e.g. 2007, 2008"),
# sliderInput("pricerange", "Median price", min(df$price_EUR), max(df$price_EUR), value=df$price_EUR[df$year == input$inputyear,]),
tableOutput("table")
)
server <- function(input, output, session) {
output$table <- renderTable({
df[df$year %in% input$inputyear,]
})
}
shinyApp(ui, server)
unique(df$year) %>% sort()
library(shiny)
library(ggplot2)
library(dplyr)
carmodel <- c("Škoda Octavia")
caryear <- unique(df$year)
ui <- fluidPage(
selectInput("carmodel", "Model", choices = carmodel),
# textInput("inputyear", "Year",  placeholder = "2007"),
selectInput("inputyear", "Year", unique(df$year) %>% sort(), multiple = TRUE),
# sliderInput("pricerange", "Median price", min(df$price_EUR), max(df$price_EUR), value=df$price_EUR[df$year == input$inputyear,]),
tableOutput("table")
)
server <- function(input, output, session) {
output$table <- renderTable({
df[df$year %in% input$inputyear,]
})
}
shinyApp(ui, server)
library(shiny)
library(ggplot2)
library(dplyr)
carmodel <- c("Škoda Octavia")
caryear <- unique(df$year)
ui <- fluidPage(
selectInput("carmodel", "Model", choices = carmodel),
# textInput("inputyear", "Year",  placeholder = "2007"),
selectInput("inputyear", "Year", unique(df$year) %>% sort(), multiple = TRUE),
# sliderInput("pricerange", "Median price", min(df$price_EUR), max(df$price_EUR), value=df$price_EUR[df$year == input$inputyear,]),
tableOutput("table")
)
server <- function(input, output, session) {
output$table <- renderTable({
df[df$year %in% input$inputyear,] %>% arrange(price_EUR)
})
}
shinyApp(ui, server)
library(shiny)
library(ggplot2)
library(dplyr)
carmodel <- c("Škoda Octavia")
caryear <- unique(df$year)
ui <- fluidPage(
selectInput("carmodel", "Model", choices = carmodel),
# textInput("inputyear", "Year",  placeholder = "2007"),
selectInput("inputyear", "Year", unique(df$year) %>% sort(), multiple = TRUE),
# sliderInput("pricerange", "Median price", min(df$price_EUR), max(df$price_EUR), value=df$price_EUR[df$year == input$inputyear,]),
tableOutput("table")
)
server <- function(input, output, session) {
output$table <- renderTable({
df[df$year %in% input$inputyear,] %>% arrange(price_EUR)
})
}
shinyApp(ui, server)
runApp('03_determineprice.R')
runApp('03_determineprice.R')
