iditer <- html_nodes(vauvauarticles, css=".entity-title .link")[i] %>%
html_attr(.,"name")
print(iditer)
id <- c(id, iditer)
fullpriceiter <- html_text(html_nodes(vauvauarticles, css=".price")[i]) %>%
trimws(., which = c("both", "left", "right"), whitespace = "[ \t\r\n]")
fullprice <- c(fullprice, fullpriceiter)
price_EUR[i] <- substr(fullprice[i], 1, unlist(gregexpr("€", fullprice[i]))[1]-2) %>%
ifelse(unlist(gregexpr("\\,", .))[1]==-1, ., substr(., 1, str_length(.)-3)) %>% as.numeric()*1000
price_HRK[i] <- substr(fullprice[i], unlist(gregexpr("/", fullprice[i]))[1]+2, str_length(fullprice[i])-3) %>%
gsub("\\.", "", .) %>% gsub("\\,","", .) %>% as.numeric()/100
description[i] <- html_text(html_nodes(vauvauarticles, css=".entity-description-main")[i]) %>%
trimws(., which = c("both", "left", "right"), whitespace = "[ \t\r\n]")
kilometers[i] <- substring(description[i], 1, unlist(gregexpr("\n", description[i]))[1]-1) %>%
substring(.,unlist(gregexpr(",", .))[1]+2,str_length(.)-3) %>%
strtoi()
year[i] <- substr(description[i], unlist(gregexpr("\n", description[i]))[1], unlist(gregexpr("\\.", description[i]))[1]) %>%
trimws(., which = c("both", "left", "right"), whitespace = "[ \t\r\n]") %>%
substr(., unlist(gregexpr(":", .))[1]+2, str_length(.)-1)
}
length(id)
for (i in (length(vauvauarticles)+1):(length(vauvauarticles)+length(regulararticles))) {
iditer <- html_nodes(regulararticles, css=".entity-title .link")[i-length(vauvauarticles)] %>%
html_attr(.,"name")
print(iditer)
id <- c(id, iditer)
fullpriceiter <- html_text(html_nodes(regulararticles, css=".price")[i-length(vauvauarticles)]) %>%
trimws(., which = c("both", "left", "right"), whitespace = "[ \t\r\n]")
fullprice <- c(fullprice, fullpriceiter)
price_EUR[i] <- substr(fullprice[i], 1, unlist(gregexpr("€", fullprice[i]))[1]-2) %>%
ifelse(unlist(gregexpr("\\,", .))[1]==-1, ., substr(., 1, str_length(.)-3)) %>% as.numeric()*1000
price_HRK[i] <- substr(fullprice[i], unlist(gregexpr("/", fullprice[i]))[1]+2, str_length(fullprice[i])-3) %>%
gsub("\\.", "", .) %>% gsub("\\,","", .) %>% as.numeric()/100
description[i] <- html_text(html_nodes(regulararticles, css=".entity-description-main")[i-length(vauvauarticles)]) %>%
trimws(., which = c("both", "left", "right"), whitespace = "[ \t\r\n]")
kilometers[i] <- substring(description[i], 1, unlist(gregexpr("\n", description[i]))[1]-1) %>%
substring(.,unlist(gregexpr(",", .))[1]+2,str_length(.)-3) %>%
strtoi()
year[i] <- substr(description[i], unlist(gregexpr("\n", description[i]))[1], unlist(gregexpr("\\.", description[i]))[1]) %>%
trimws(., which = c("both", "left", "right"), whitespace = "[ \t\r\n]") %>%
substr(., unlist(gregexpr(":", .))[1]+2, str_length(.)-1)
}
length(id)
df <- data.frame(id, year, kilometers, fullprice, price_EUR, price_HRK, row.names = NULL) %>% arrange(price_EUR)
View(df)
df %>% distinct()
df <- data.frame(id, year, kilometers, fullprice, price_EUR, price_HRK, row.names = NULL) %>% arrange(price_EUR) %>%
distinct() %>%
order(df$price_EUR)
df <- data.frame(id, year, kilometers, fullprice, price_EUR, price_HRK, row.names = NULL) %>% arrange(price_EUR) %>%
distinct() %>%
order(df$price_EUR)
df <- data.frame(id, year, kilometers, fullprice, price_EUR, price_HRK, row.names = NULL) %>% arrange(price_EUR) %>%
distinct() %>%
df <- data.frame(id, year, kilometers, fullprice, price_EUR, price_HRK, row.names = NULL) %>% arrange(price_EUR) %>%
distinct()
View(df)
df <- data.frame(id, year, kilometers, fullprice, price_EUR, price_HRK, row.names = NULL) %>% arrange(price_EUR) %>%
distinct() %>%
order(price_EUR)
df <- data.frame(id, year, kilometers, fullprice, price_EUR, price_HRK, row.names = NULL) %>% arrange(price_EUR) %>%
distinct() %>%
sort(price_EUR)
df <- data.frame(id, year, kilometers, fullprice, price_EUR, price_HRK, row.names = NULL) %>% arrange(price_EUR) %>%
distinct() %>%
sort(df$price_EUR)
df <- data.frame(id, year, kilometers, fullprice, price_EUR, price_HRK, row.names = NULL) %>% arrange(price_EUR) %>%
distinct() %>%
sort(df$price_EUR, decreasing = FALSE
)
df <- data.frame(id, year, kilometers, fullprice, price_EUR, price_HRK, row.names = NULL) %>% arrange(price_EUR) %>%
distinct() %>%
sort(df$price_EUR, decreasing = FALSE)
df <- data.frame(id, year, kilometers, fullprice, price_EUR, price_HRK, row.names = NULL) %>% arrange(price_EUR) %>%
distinct() %>%
sort(price_EUR, decreasing = FALSE)
df <- data.frame(id, year, kilometers, fullprice, price_EUR, price_HRK, row.names = NULL) %>% arrange(price_EUR) %>%
sort(price_EUR, decreasing = FALSE) %>%
distinct()
df <- data.frame(id, year, kilometers, fullprice, price_EUR, price_HRK, row.names = NULL) %>% arrange(price_EUR)
df <- data.frame(id, year, kilometers, fullprice, price_EUR, price_HRK, row.names = NULL) %>% arrange(price_EUR) %>%
sort(df$price_EUR, decreasing = FALSE)
df <- data.frame(id, year, kilometers, fullprice, price_EUR, price_HRK, row.names = NULL) %>% arrange(price_EUR) %>%
order(df$price_EUR, decreasing = FALSE)
df <- data.frame(id, year, kilometers, fullprice, price_EUR, price_HRK, row.names = NULL) %>% arrange(price_EUR) %>%
order(price_EUR, decreasing = FALSE)
df <- data.frame(id, year, kilometers, fullprice, price_EUR, price_HRK, row.names = NULL) %>%
arrange(price_EUR) %>%
distinct()
View(df)
for (i in (length(vauvauarticles)+1):(length(vauvauarticles)+length(regulararticles))) {
iditer <- html_nodes(regulararticles, css=".entity-title .link")[i-length(vauvauarticles)] %>%
html_attr(.,"name")
print(iditer)
id <- c(id, iditer)
fullpriceiter <- html_text(html_nodes(regulararticles, css=".price")[i-length(vauvauarticles)]) %>%
trimws(., which = c("both", "left", "right"), whitespace = "[ \t\r\n]")
fullprice <- c(fullprice, fullpriceiter)
price_EUR[i] <- substr(fullprice[i], 1, unlist(gregexpr("€", fullprice[i]))[1]-2) %>%
ifelse(unlist(gregexpr("\\,", .))[1]==-1, ., substr(., 1, str_length(.)-3)) %>% as.numeric()*1000
price_HRK[i] <- substr(fullprice[i], unlist(gregexpr("/", fullprice[i]))[1]+2, str_length(fullprice[i])-3) %>%
gsub("\\.", "", .) %>% gsub("\\,","", .) %>% as.numeric()/100
description[i] <- html_text(html_nodes(regulararticles, css=".entity-description-main")[i-length(vauvauarticles)]) %>%
trimws(., which = c("both", "left", "right"), whitespace = "[ \t\r\n]")
kilometers[i] <- substring(description[i], 1, unlist(gregexpr("\n", description[i]))[1]-1) %>%
substring(.,unlist(gregexpr(",", .))[1]+2,str_length(.)-3) %>%
strtoi()
year[i] <- substr(description[i], unlist(gregexpr("\n", description[i]))[1], unlist(gregexpr("\\.", description[i]))[1]) %>%
trimws(., which = c("both", "left", "right"), whitespace = "[ \t\r\n]") %>%
substr(., unlist(gregexpr(":", .))[1]+2, str_length(.)-1)
}
View(df)
#### SET UP
library(tidyverse) # Load core Tidyverse packages, including dplyr
library(rvest)     # Additional Tidyverse packages for web scraping
library(xml2)      # Package to work with XML files
#### SCRAPE - "skoda-octavia" to become input parameter in future upgrades
##### Until I figure out how to deal with captcha, I will manually copy/paste page source code into a local file
# mybaseurl <- 'https://www.njuskalo.hr/auti/skoda-octavia'
# myurl <- mybaseurl
# myurl <- 'https://www.njuskalo.hr/auti/skoda-octavia?page=16'
myurl <- "skoda-octavia.html" ##### THIS IS FALLBACK TO FILE
mypage <- read_html(myurl)
id <- c()
fullprice <- c()
price_EUR <- c()
price_HRK <- c()
description <- c()
kilometers <- c()
year <- c()
vauvauarticles <- mypage %>%
html_elements(css=".EntityList-item--VauVau .entity-body")
regulararticles <- mypage %>%
html_elements(css=".EntityList-item--Regular .entity-body")
for (i in 1:length(vauvauarticles)) {
iditer <- html_nodes(vauvauarticles, css=".entity-title .link")[i] %>%
html_attr(.,"name")
print(iditer)
id <- c(id, iditer)
fullpriceiter <- html_text(html_nodes(vauvauarticles, css=".price")[i]) %>%
trimws(., which = c("both", "left", "right"), whitespace = "[ \t\r\n]")
fullprice <- c(fullprice, fullpriceiter)
price_EUR[i] <- substr(fullprice[i], 1, unlist(gregexpr("€", fullprice[i]))[1]-2) %>%
ifelse(unlist(gregexpr("\\,", .))[1]==-1, ., substr(., 1, str_length(.)-3)) %>% as.numeric()*1000
price_HRK[i] <- substr(fullprice[i], unlist(gregexpr("/", fullprice[i]))[1]+2, str_length(fullprice[i])-3) %>%
gsub("\\.", "", .) %>% gsub("\\,","", .) %>% as.numeric()/100
description[i] <- html_text(html_nodes(vauvauarticles, css=".entity-description-main")[i]) %>%
trimws(., which = c("both", "left", "right"), whitespace = "[ \t\r\n]")
kilometers[i] <- substring(description[i], 1, unlist(gregexpr("\n", description[i]))[1]-1) %>%
substring(.,unlist(gregexpr(",", .))[1]+2,str_length(.)-3) %>%
strtoi()
year[i] <- substr(description[i], unlist(gregexpr("\n", description[i]))[1], unlist(gregexpr("\\.", description[i]))[1]) %>%
trimws(., which = c("both", "left", "right"), whitespace = "[ \t\r\n]") %>%
substr(., unlist(gregexpr(":", .))[1]+2, str_length(.)-1)
}
for (i in (length(vauvauarticles)+1):(length(vauvauarticles)+length(regulararticles))) {
iditer <- html_nodes(regulararticles, css=".entity-title .link")[i-length(vauvauarticles)] %>%
html_attr(.,"name")
print(iditer)
id <- c(id, iditer)
fullpriceiter <- html_text(html_nodes(regulararticles, css=".price")[i-length(vauvauarticles)]) %>%
trimws(., which = c("both", "left", "right"), whitespace = "[ \t\r\n]")
fullprice <- c(fullprice, fullpriceiter)
price_EUR[i] <- substr(fullprice[i], 1, unlist(gregexpr("€", fullprice[i]))[1]-2) %>%
ifelse(unlist(gregexpr("\\,", .))[1]==-1, ., substr(., 1, str_length(.)-3)) %>% as.numeric()*1000
price_HRK[i] <- substr(fullprice[i], unlist(gregexpr("/", fullprice[i]))[1]+2, str_length(fullprice[i])-3) %>%
gsub("\\.", "", .) %>% gsub("\\,","", .) %>% as.numeric()/100
description[i] <- html_text(html_nodes(regulararticles, css=".entity-description-main")[i-length(vauvauarticles)]) %>%
trimws(., which = c("both", "left", "right"), whitespace = "[ \t\r\n]")
kilometers[i] <- substring(description[i], 1, unlist(gregexpr("\n", description[i]))[1]-1) %>%
substring(.,unlist(gregexpr(",", .))[1]+2,str_length(.)-3) %>%
strtoi()
year[i] <- substr(description[i], unlist(gregexpr("\n", description[i]))[1], unlist(gregexpr("\\.", description[i]))[1]) %>%
trimws(., which = c("both", "left", "right"), whitespace = "[ \t\r\n]") %>%
substr(., unlist(gregexpr(":", .))[1]+2, str_length(.)-1)
}
df <- data.frame(id, year, kilometers, fullprice, price_EUR, price_HRK, row.names = NULL) %>%
arrange(price_EUR) %>%
distinct()
#### SET UP
library(tidyverse) # Load core Tidyverse packages, including dplyr
library(rvest)     # Additional Tidyverse packages for web scraping
library(xml2)      # Package to work with XML files
#### SCRAPE - "skoda-octavia" to become input parameter in future upgrades
##### Until I figure out how to deal with captcha, I will manually copy/paste page source code into a local file
# mybaseurl <- 'https://www.njuskalo.hr/auti/skoda-octavia'
# myurl <- mybaseurl
# myurl <- 'https://www.njuskalo.hr/auti/skoda-octavia?page=16'
myurl <- "skoda-octavia.html" ##### THIS IS FALLBACK TO FILE
mypage <- read_html(myurl)
id <- c()
fullprice <- c()
price_EUR <- c()
price_HRK <- c()
description <- c()
kilometers <- c()
year <- c()
# for (i in 0:maxpage) {}
#
# ifelse(i=0, myurl <- mybaseurl, myurl <- str_c(mybaseurl, "?page=", i))
# mypage <- read_html(myurl)
vauvauarticles <- mypage %>%
html_elements(css=".EntityList-item--VauVau .entity-body")
regulararticles <- mypage %>%
html_elements(css=".EntityList-item--Regular .entity-body")
for (i in 1:length(vauvauarticles)) {
iditer <- html_nodes(vauvauarticles, css=".entity-title .link")[i] %>%
html_attr(.,"name")
print(iditer)
id <- c(id, iditer)
fullpriceiter <- html_text(html_nodes(vauvauarticles, css=".price")[i]) %>%
trimws(., which = c("both", "left", "right"), whitespace = "[ \t\r\n]")
fullprice <- c(fullprice, fullpriceiter)
price_EURiter <- substr(fullpriceiter, 1, unlist(gregexpr("€", fullpriceiter))[1]-2) %>%
ifelse(unlist(gregexpr("\\,", .))[1]==-1, ., substr(., 1, str_length(.)-3)) %>% as.numeric()*1000
price_EUR <- c(price_EUR, price_EURiter)
price_HRKiter <- substr(fullpriceiter, unlist(gregexpr("/", fullprice[i]))[1]+2, str_length(fullpriceiter)-3) %>%
gsub("\\.", "", .) %>% gsub("\\,","", .) %>% as.numeric()/100
price_HRK <- price_HRKiter
description <- html_text(html_nodes(vauvauarticles, css=".entity-description-main")[i]) %>%
trimws(., which = c("both", "left", "right"), whitespace = "[ \t\r\n]")
kilometersiter <- substring(description, 1, unlist(gregexpr("\n", description))[1]-1) %>%
substring(.,unlist(gregexpr(",", .))[1]+2,str_length(.)-3) %>%
strtoi()
kilometers <- c(kilometers, kilometersiter)
yeariter <- substr(description, unlist(gregexpr("\n", description))[1], unlist(gregexpr("\\.", description))[1]) %>%
trimws(., which = c("both", "left", "right"), whitespace = "[ \t\r\n]") %>%
substr(., unlist(gregexpr(":", .))[1]+2, str_length(.)-1)
year <- c(year, yeariter)
}
for (i in (length(vauvauarticles)+1):(length(vauvauarticles)+length(regulararticles))) {
iditer <- html_nodes(regulararticles, css=".entity-title .link")[i-length(vauvauarticles)] %>%
html_attr(.,"name")
print(iditer)
id <- c(id, iditer)
fullpriceiter <- html_text(html_nodes(regulararticles, css=".price")[i-length(vauvauarticles)]) %>%
trimws(., which = c("both", "left", "right"), whitespace = "[ \t\r\n]")
fullprice <- c(fullprice, fullpriceiter)
price_EURiter <- substr(fullpriceiter, 1, unlist(gregexpr("€", fullpriceiter))[1]-2) %>%
ifelse(unlist(gregexpr("\\,", .))[1]==-1, ., substr(., 1, str_length(.)-3)) %>% as.numeric()*1000
price_EUR <- c(price_EUR, price_EURiter)
price_HRKiter <- substr(fullpriceiter, unlist(gregexpr("/", fullprice[i]))[1]+2, str_length(fullpriceiter)-3) %>%
gsub("\\.", "", .) %>% gsub("\\,","", .) %>% as.numeric()/100
price_HRK <- price_HRKiter
description <- html_text(html_nodes(regulararticles, css=".entity-description-main")[i-length(vauvauarticles)]) %>%
trimws(., which = c("both", "left", "right"), whitespace = "[ \t\r\n]")
kilometersiter <- substring(description, 1, unlist(gregexpr("\n", description))[1]-1) %>%
substring(.,unlist(gregexpr(",", .))[1]+2,str_length(.)-3) %>%
strtoi()
kilometers <- c(kilometers, kilometersiter)
yeariter <- substr(description, unlist(gregexpr("\n", description))[1], unlist(gregexpr("\\.", description))[1]) %>%
trimws(., which = c("both", "left", "right"), whitespace = "[ \t\r\n]") %>%
substr(., unlist(gregexpr(":", .))[1]+2, str_length(.)-1)
year <- c(year, yeariter)
}
library(tidyverse) # Load core Tidyverse packages, including dplyr
library(rvest)     # Additional Tidyverse packages for web scraping
library(xml2)      # Package to work with XML files
mybaseurl <- 'https://www.njuskalo.hr/auti/skoda-octavia'
paging <- mypage %>%
html_elements(css=".PaginationContainer--top .Pagination-item") %>% html_text()
mypage <- read_html(myurl)
mypage <- read_html(mybaseurl)
paging <- mypage %>%
html_elements(css=".PaginationContainer--top .Pagination-item") %>% html_text()
paging
ismaxpage <- function(paging) {
if(str_detect(paging[length(paging)], "Sljede") && !(str_detect(paging[length(paging)-1], "-")))
maxnext <- c(paging[length(paging)-1],NA)
else if(!str_detect(paging[length(paging)], "Sljede"))
maxnext <- c(paging[length(paging)], NA)
else maxnext <- c(NA, substr(paging[length(paging)-1],1,unlist(gregexpr("-", paging[length(paging)-1])[1])-1))
return(maxnext)
}
while(is.na(ismaxpage(paging)[1])) {
rm(myurl)
myurl <- str_c(mybaseurl, "?page=", ismaxpage(paging)[2])
rm(paging)
mypage <- read_html(myurl)
paging <- mypage %>%
html_elements(css=".PaginationContainer--top .Pagination-item") %>% html_text()
}
maxpage <- ismaxpage(paging)[1] %>% strtoi()
while(is.na(ismaxpage(paging)[1])) {
myurl <- str_c(mybaseurl, "?page=", ismaxpage(paging)[2])
rm(paging)
mypage <- read_html(myurl)
paging <- mypage %>%
html_elements(css=".PaginationContainer--top .Pagination-item") %>% html_text()
}
maxpage <- ismaxpage(paging)[1] %>% strtoi()
maxpage
id <- c()
fullprice <- c()
price_EUR <- c()
price_HRK <- c()
description <- c()
kilometers <- c()
year <- c()
for (i in 0:maxpage) {
ifelse(i=0, myurl <- mybaseurl, myurl <- str_c(mybaseurl, "?page=", i))
mypage <- read_html(myurl)
vauvauarticles <- mypage %>%
html_elements(css=".EntityList-item--VauVau .entity-body")
regulararticles <- mypage %>%
html_elements(css=".EntityList-item--Regular .entity-body")
# regularids <- html_nodes(regulararticles, css=".entity-title .link") %>%
#   html_attr(.,"name")
#
# vauvauids <- html_nodes(vauvauarticles, css=".entity-title .link") %>%
#   html_attr(.,"name")
#First go through Vau Vau articles
if(length(vauvauarticles)>0) {
for (i in 1:length(vauvauarticles)) {
iditer <- html_nodes(vauvauarticles, css=".entity-title .link")[i] %>%
html_attr(.,"name")
print(iditer)
id <- c(id, iditer)
fullpriceiter <- html_text(html_nodes(vauvauarticles, css=".price")[i]) %>%
trimws(., which = c("both", "left", "right"), whitespace = "[ \t\r\n]")
fullprice <- c(fullprice, fullpriceiter)
price_EURiter <- substr(fullpriceiter, 1, unlist(gregexpr("€", fullpriceiter))[1]-2) %>%
ifelse(unlist(gregexpr("\\,", .))[1]==-1, ., substr(., 1, str_length(.)-3)) %>% as.numeric()*1000
price_EUR <- c(price_EUR, price_EURiter)
price_HRKiter <- substr(fullpriceiter, unlist(gregexpr("/", fullprice[i]))[1]+2, str_length(fullpriceiter)-3) %>%
gsub("\\.", "", .) %>% gsub("\\,","", .) %>% as.numeric()/100
price_HRK <- price_HRKiter
description <- html_text(html_nodes(vauvauarticles, css=".entity-description-main")[i]) %>%
trimws(., which = c("both", "left", "right"), whitespace = "[ \t\r\n]")
kilometersiter <- substring(description, 1, unlist(gregexpr("\n", description))[1]-1) %>%
substring(.,unlist(gregexpr(",", .))[1]+2,str_length(.)-3) %>%
strtoi()
kilometers <- c(kilometers, kilometersiter)
yeariter <- substr(description, unlist(gregexpr("\n", description))[1], unlist(gregexpr("\\.", description))[1]) %>%
trimws(., which = c("both", "left", "right"), whitespace = "[ \t\r\n]") %>%
substr(., unlist(gregexpr(":", .))[1]+2, str_length(.)-1)
year <- c(year, yeariter)
}
}
#Then go through regular articles
###### This is in 2 loops instead of one as binding these two types of articles with c(,) creates "list" and gives following error
###### Error in UseMethod("xml_find_all") : no applicable method for 'xml_find_all' applied to an object of class "list"
if(length(regulararticles)>0) {
for (i in (length(vauvauarticles)+1):(length(vauvauarticles)+length(regulararticles))) {
iditer <- html_nodes(regulararticles, css=".entity-title .link")[i-length(vauvauarticles)] %>%
html_attr(.,"name")
print(iditer)
id <- c(id, iditer)
fullpriceiter <- html_text(html_nodes(regulararticles, css=".price")[i-length(vauvauarticles)]) %>%
trimws(., which = c("both", "left", "right"), whitespace = "[ \t\r\n]")
fullprice <- c(fullprice, fullpriceiter)
price_EURiter <- substr(fullpriceiter, 1, unlist(gregexpr("€", fullpriceiter))[1]-2) %>%
ifelse(unlist(gregexpr("\\,", .))[1]==-1, ., substr(., 1, str_length(.)-3)) %>% as.numeric()*1000
price_EUR <- c(price_EUR, price_EURiter)
price_HRKiter <- substr(fullpriceiter, unlist(gregexpr("/", fullprice[i]))[1]+2, str_length(fullpriceiter)-3) %>%
gsub("\\.", "", .) %>% gsub("\\,","", .) %>% as.numeric()/100
price_HRK <- price_HRKiter
description <- html_text(html_nodes(regulararticles, css=".entity-description-main")[i-length(vauvauarticles)]) %>%
trimws(., which = c("both", "left", "right"), whitespace = "[ \t\r\n]")
kilometersiter <- substring(description, 1, unlist(gregexpr("\n", description))[1]-1) %>%
substring(.,unlist(gregexpr(",", .))[1]+2,str_length(.)-3) %>%
strtoi()
kilometers <- c(kilometers, kilometersiter)
yeariter <- substr(description, unlist(gregexpr("\n", description))[1], unlist(gregexpr("\\.", description))[1]) %>%
trimws(., which = c("both", "left", "right"), whitespace = "[ \t\r\n]") %>%
substr(., unlist(gregexpr(":", .))[1]+2, str_length(.)-1)
year <- c(year, yeariter)
}
}
}
for (i in 0:maxpage) {
ifelse(i==0, myurl <- mybaseurl, myurl <- str_c(mybaseurl, "?page=", i))
mypage <- read_html(myurl)
vauvauarticles <- mypage %>%
html_elements(css=".EntityList-item--VauVau .entity-body")
regulararticles <- mypage %>%
html_elements(css=".EntityList-item--Regular .entity-body")
# regularids <- html_nodes(regulararticles, css=".entity-title .link") %>%
#   html_attr(.,"name")
#
# vauvauids <- html_nodes(vauvauarticles, css=".entity-title .link") %>%
#   html_attr(.,"name")
#First go through Vau Vau articles
if(length(vauvauarticles)>0) {
for (i in 1:length(vauvauarticles)) {
iditer <- html_nodes(vauvauarticles, css=".entity-title .link")[i] %>%
html_attr(.,"name")
print(iditer)
id <- c(id, iditer)
fullpriceiter <- html_text(html_nodes(vauvauarticles, css=".price")[i]) %>%
trimws(., which = c("both", "left", "right"), whitespace = "[ \t\r\n]")
fullprice <- c(fullprice, fullpriceiter)
price_EURiter <- substr(fullpriceiter, 1, unlist(gregexpr("€", fullpriceiter))[1]-2) %>%
ifelse(unlist(gregexpr("\\,", .))[1]==-1, ., substr(., 1, str_length(.)-3)) %>% as.numeric()*1000
price_EUR <- c(price_EUR, price_EURiter)
price_HRKiter <- substr(fullpriceiter, unlist(gregexpr("/", fullprice[i]))[1]+2, str_length(fullpriceiter)-3) %>%
gsub("\\.", "", .) %>% gsub("\\,","", .) %>% as.numeric()/100
price_HRK <- price_HRKiter
description <- html_text(html_nodes(vauvauarticles, css=".entity-description-main")[i]) %>%
trimws(., which = c("both", "left", "right"), whitespace = "[ \t\r\n]")
kilometersiter <- substring(description, 1, unlist(gregexpr("\n", description))[1]-1) %>%
substring(.,unlist(gregexpr(",", .))[1]+2,str_length(.)-3) %>%
strtoi()
kilometers <- c(kilometers, kilometersiter)
yeariter <- substr(description, unlist(gregexpr("\n", description))[1], unlist(gregexpr("\\.", description))[1]) %>%
trimws(., which = c("both", "left", "right"), whitespace = "[ \t\r\n]") %>%
substr(., unlist(gregexpr(":", .))[1]+2, str_length(.)-1)
year <- c(year, yeariter)
}
}
#Then go through regular articles
###### This is in 2 loops instead of one as binding these two types of articles with c(,) creates "list" and gives following error
###### Error in UseMethod("xml_find_all") : no applicable method for 'xml_find_all' applied to an object of class "list"
if(length(regulararticles)>0) {
for (i in (length(vauvauarticles)+1):(length(vauvauarticles)+length(regulararticles))) {
iditer <- html_nodes(regulararticles, css=".entity-title .link")[i-length(vauvauarticles)] %>%
html_attr(.,"name")
print(iditer)
id <- c(id, iditer)
fullpriceiter <- html_text(html_nodes(regulararticles, css=".price")[i-length(vauvauarticles)]) %>%
trimws(., which = c("both", "left", "right"), whitespace = "[ \t\r\n]")
fullprice <- c(fullprice, fullpriceiter)
price_EURiter <- substr(fullpriceiter, 1, unlist(gregexpr("€", fullpriceiter))[1]-2) %>%
ifelse(unlist(gregexpr("\\,", .))[1]==-1, ., substr(., 1, str_length(.)-3)) %>% as.numeric()*1000
price_EUR <- c(price_EUR, price_EURiter)
price_HRKiter <- substr(fullpriceiter, unlist(gregexpr("/", fullprice[i]))[1]+2, str_length(fullpriceiter)-3) %>%
gsub("\\.", "", .) %>% gsub("\\,","", .) %>% as.numeric()/100
price_HRK <- price_HRKiter
description <- html_text(html_nodes(regulararticles, css=".entity-description-main")[i-length(vauvauarticles)]) %>%
trimws(., which = c("both", "left", "right"), whitespace = "[ \t\r\n]")
kilometersiter <- substring(description, 1, unlist(gregexpr("\n", description))[1]-1) %>%
substring(.,unlist(gregexpr(",", .))[1]+2,str_length(.)-3) %>%
strtoi()
kilometers <- c(kilometers, kilometersiter)
yeariter <- substr(description, unlist(gregexpr("\n", description))[1], unlist(gregexpr("\\.", description))[1]) %>%
trimws(., which = c("both", "left", "right"), whitespace = "[ \t\r\n]") %>%
substr(., unlist(gregexpr(":", .))[1]+2, str_length(.)-1)
year <- c(year, yeariter)
}
}
}
df <- data.frame(id, year, kilometers, fullprice, price_EUR, price_HRK, row.names = NULL) %>%
arrange(price_EUR) %>%
df <- data.frame(id, year, kilometers, fullprice, price_EUR, price_HRK, row.names = NULL) %>%
arrange(price_EUR)
View(df)
source("initandfetchpages.R")
View(mypage)
View(mypage)
now
now()
toString(now())
save_html(mypage, str_c("mypage", toString(now())), background = "white", libdir = "lib", lang = "en")
library(htmltools)
mybaseurl <- 'https://www.njuskalo.hr/auti/skoda-octavia'
mypage <- read_html(mybaseurl)
save_html(mypage, str_c("mypage", toString(now())), background = "white", libdir = "lib", lang = "en")
str_c("mypage", toString(now()))
htmlfetchtimestamp <- toString(now()) %>% str_replace(., ":", "-")
htmlfetchtimestamp
htmlfetchtimestamp <- toString(now()) %>% str_replace_all(., ":", "-")
htmlfetchtimestamp
save_html(mypage, str_c("mypage_", toString(now())), background = "white", libdir = "lib", lang = "en")
htmlfetchtimestamp <- toString(now()) %>% str_replace_all(., ":", "-")
htmlfetchtimestamp
file.create(str_c("mypage_", toString(now())), ".html")
file.create(str_c("mypage_", toString(now()), ".html"))
htmlfetchtimestamp <- toString(now()) %>% str_replace_all(., ":", "-")
myfile <- file.create(str_c("mypage_", toString(now()), ".html"))
save_html(mypage, myfile, background = "white", libdir = "lib", lang = "en")
myfile
ws
ws()
getwd()
myfilepath <- str_c(toString(getwd()), myfile)
myfilepath
myfilepath <- str_c(toString(getwd()), "/", str_c("mypage_", toString(now()), ".html"))
myfilepath
save_html(mypage, myfile, background = "white", libdir = "lib", lang = "en")
save_html(mypage, myfilepath, background = "white", libdir = "lib", lang = "en")
myfilepath <- str_c(toString(getwd()), "/", str_c("mypage_", toString(now()), ".html"))
myfilepath
save_html(mypage, myfilepath, background = "white", libdir = "lib", lang = "en")
myfilepath <- str_c(toString(getwd()), "/", str_c("mypage_", "test", ".html"))
save_html(mypage, myfilepath, background = "white", libdir = "lib", lang = "en")
myfilepath
mypage
print(mypage)
save_html(mypage, "/Users/anton/Documents/R Workspace/Education/Njuskalo/mypage_test.html"", background = "white", libdir = "lib", lang = "en")
save_html(mypage, "/Users/anton/Documents/R Workspace/Education/Njuskalo/mypage_test.html", background = "white", libdir = "lib", lang = "en")
save_html(mypage, "\Users\anton\Documents\R Workspace\Education\Njuskalo\mypage_test.html", background = "white", libdir = "lib", lang = "en")
save_html(mypage, "Users\anton\Documents\R Workspace\Education\Njuskalo\mypage_test.html", background = "white", libdir = "lib", lang = "en")
save_html(mypage, "Users/anton/Documents/R Workspace/Education/Njuskalo/mypage_test.html", background = "white", libdir = "lib", lang = "en")
save_html(mypage, "/Users/anton/Documents/R Workspace/Education/Njuskalo/mypage_test.html", background = "white", libdir = "lib", lang = "en")
View(mypage)
View(mypage)
View(mypage)
View(mypage)
View(mypage)
View(mypage)
View(mypage)
save_html(mypage, "/Users/anton/Documents/R Workspace/Education/Njuskalo/mypage_test.html", background = "white", libdir = "lib", lang = "en")
browseURL(paste('file://', getwd(),'mypage_test.html', sep='/'))
library(rio)
install.packages("rio")
library(rio)
install_formats()
export(mypage, "mypage_test.html")
toString(mypage)
export(toString(mypage), "mypage_test.html", )
writeLines(export(toString(mypage), "mypage_test.html",)
writeLines(toString(mypage), "mypage_test.html")
